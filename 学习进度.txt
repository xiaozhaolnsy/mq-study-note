Day1 2020-08-08 SAT MQ
========================
参考资料 尚硅谷ActiveMQ教程(MQ消息中间件快速入门)
https://www.bilibili.com/video/BV164411G7aB

一、前言
    -> 目标： 解耦、异步、削峰
    -> 产品种类：Kafka、RabbitMQ、*RocketMQ、*ActiveMQ、...
                (j/scala)(erlang)(ali java)   (java)
    -> 技术维度：API、高可用、集群容错、持久化、延定时投递、签收机制、Spring整合

二、ActiveMQ概述
    -> 官网 http://activemq.apache.org/ （可能有点慢）
    -> 功能 实现高可用、高性能、可伸缩、易用、安全的企业级面向消息服务的系统
    -> 异步消息的消费和处理
    -> 控制消息的消费顺序
    -> 可以和spring/springboot整合简化编码
    -> 配置集群容错
    此处选用docker安装
        docker run -d --name activemq 
                -p 61617:61616 -p 8162:8161 
                webcenter/activemq
        docker exec -it activemq /bin/bash 进入 ActiveMQ
    踩坑提示：虚拟机web不可以用EDGE访问（404），推荐Chrome
    复习Linux命令：
        -> ./activemq start > /myactiveMQ/activemq.log (> overide,>> append)
        ->ps -ef|grep activemq|grep -v grep (查进程、-v 过滤掉grep进程)
        ->netstat -anp|grep 61616 (查端口是否被占)

三、Java实践
    1.IDEA Maven工程
    2.pom
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-all</artifactId>
            <version>5.14.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xbean</groupId>
            <artifactId>xbean-spring</artifactId>
            <version>3.16</version>
        </dependency>
    3.JMS总体架构(Java Message Service)
                                                       +------------------+ 
            +------------+              +------------> | Message Producer |
            | Connection |              |   create     +------------------+
            |   Factory  |         +---------+         +-----+             \ send
            +------------+      -->| Session |-------> | MSG |     << Destination >>
                  | create     /   +---------+ create  +-----+             / receive
            +------------+    /         |              +------------------+
            | Connection |---/          +------------> | Message Consumer |
            +------------+   create         create     +------------------+
            
            ps >工厂获得连接，连接获得会话
               >Destination -> Queue: 1 -> 1
                            -> Topic: 1 -> many, publish&subscribe 
    4.消息生产 --> 练武不练功，到老一场空 学mybatis前也要学jdbc
        1)创建连接工厂                                     +i------+
        2)通过连接工厂获得连接并启动                        | queue |
        3)创建会话  参数，1事务 2签收   +i------------+  /- +-------+
        4)创建目的地                   | Destination |<     
        5)创建消息生产者               +-------------+  \- +i------+
        6)生产消息送到队列                                 | topic |
        7)创建消息                                         +-------+
        8)通过生成者发送给mq
        9)关闭资源
    5.消息消费
        -> while(true) 同步阻塞
        -> MessageListener 异步非阻塞
   *6.queue问题
        1)先生产，启动1号消费，再启动2号消费。2号还能消费吗？ -- N
        2)先启动2个消费，再生产，消费情况如何？ -- 轮询
    7.queue和topic
        ->topic 先订阅后发布,只能消费订阅后发布的消息

四、JMS深入
    1.JMS属于JavaEE
    2.什么是JavaEE 
        -> 一套使用Java进行企业级应用开发的一直遵循的13个核心规范工业标准
            -> JDBC、JNDI、EJB、RMI、Java IDL/CORBA、
            JSP、Servlet、XML、
            JMS、
            JTA、JTS、JavaMail、JAF
    3.四种产品的对比(此处暂略)
    4.JMS组成结构
        -> JMS provider、JMS producer、JMS consumer
        -> JMS message
            -> 消息头 -> destination、deliveryMode()、expiration、priority(0~4/5~9)、messageId
            -> 消息体 -> *TextMessage、*MapMessage、BytesMessage、StreamMessage、ObjectMessage
            -> 消息属性 -> property
    5.消息可靠性
        -> 持久化 setDeliveryMode(PERSISTENCE/NON-PERSISTENCE) 
            -> 队列默认持久
            -> Topic 先设置后start() 
                -> TopicSubscriber t = session.createDurableSubscriber
                -> start()
                /*1 一定要先运行一次消费者 -> 向MQ注册 类似我订阅了这个公众号
                  2 然后再运行生产者发送信息 此时
                  3 无论消费者是否在线 都会接收到
                    不在线 -> 下次连接时候 会把没有收到的信息全补回来
                */
        -> 事务 偏生产者            truansacted
            connection.createSession( true,     ... ) ->  需提交 session.commit()
            ...                       false,    ... ) -> 无需提交